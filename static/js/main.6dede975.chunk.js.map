{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","services/validation.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","validation","useState","Math","random","toFixed","slice","id","touched","setTouched","validationError","setValidationError","hasError","handlerInputChange","eventValue","htmlFor","type","classNames","event","target","onBlur","pattern","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","urlValidation","test","isSubmitButtonActive","trim","onSubmit","preventDefault","currentCount","newCount","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dede975.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validation?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => { },\n  validation,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [validationError, setValidationError] = useState(false);\n  const hasError = touched && required && !value;\n\n  const handlerInputChange = (eventValue: string) => {\n    onChange(eventValue);\n\n    if (validation) {\n      setValidationError(!validation(eventValue));\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || (touched && validationError),\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => handlerInputChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {touched && validationError && (\n        <p className=\"help is-danger\">Url is incorrect</p>\n      )}\n    </div>\n  );\n};\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { pattern } from '../../services/validation';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const handlerReset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handlerSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setCount(currentCount => {\n      const newCount = currentCount + 1;\n\n      if (currentCount !== newCount) {\n        handlerReset();\n      }\n\n      return newCount;\n    });\n  };\n\n  const urlValidation = (value: string) => {\n    return pattern.test(value);\n  };\n\n  const isSubmitButtonActive = title.trim()\n    && imgUrl.trim()\n    && imdbUrl.trim()\n    && imdbId.trim();\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handlerSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        onChange={setDescription}\n        value={description}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        validation={urlValidation}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        validation={urlValidation}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isSubmitButtonActive}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}